platform :ios, '15.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated = File.expand_path(File.join('Flutter', 'Generated.xcconfig'), __dir__)
  unless File.exist?(generated)
    return ENV['FLUTTER_ROOT'] if ENV['FLUTTER_ROOT']
    raise "Generated.xcconfig not found. Run `flutter pub get` locally once, or ensure FLUTTER_ROOT is set."
  end
  File.foreach(generated) do |line|
    m = line.match(/FLUTTER_ROOT\=(.*)/)
    return m[1].strip if m
  end
  raise "FLUTTER_ROOT not found in Generated.xcconfig"
end

require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper.rb'))

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :static
  use_modular_headers!
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  # CocoaPods 1.16+: call Flutter helper per target (fixes platform_name error)
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end

  # Project-wide build settings
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |c|
      c.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      c.build_settings['SWIFT_VERSION'] = '5.0'
      c.build_settings['ENABLE_BITCODE'] = 'NO'
      # If you hit simulator arch issues, uncomment:
      # c.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
  end
end
